name: infra

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths: [ '**/*.tf' ]

concurrency:
  group: infra
  cancel-in-progress: true

jobs:
  tf:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Optional but helpful
      - name: Terraform fmt & validate
        run: |
          terraform fmt -check
          terraform validate

      # Init once, with remote backend config
      - name: Terraform Init (remote backend)
        run: |
          terraform init -input=false -no-color \
            -backend-config="resource_group_name=ead-tfstaterg" \
            -backend-config="storage_account_name=eadtfstate29997" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=ead-infra.tfstate"

      # Idempotent imports to seed remote state (safe to keep; remove later if you like)
      - name: Import existing RG
        run: |
          terraform state show azurerm_resource_group.rg >/dev/null 2>&1 || \
            terraform import azurerm_resource_group.rg "/subscriptions/c8f13856-1f47-48f4-8103-70800f932e11/resourceGroups/ead-rg"

      - name: Import existing random (matches ACR suffix)
        run: |
          terraform state rm random_integer.rand >/dev/null 2>&1 || true
          terraform import random_integer.rand "6823,1000,9999"

      - name: Import existing ACR
        run: |
          terraform state show azurerm_container_registry.acr >/dev/null 2>&1 || \
            terraform import azurerm_container_registry.acr "/subscriptions/c8f13856-1f47-48f4-8103-70800f932e11/resourceGroups/ead-rg/providers/Microsoft.ContainerRegistry/registries/eadacr6823"

      - name: Terraform Plan
        run: terraform plan -input=false -no-color -out plan.out

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -input=false -no-color -auto-approve plan.out
